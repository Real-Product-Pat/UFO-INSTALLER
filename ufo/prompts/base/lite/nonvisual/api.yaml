click_input:
  summary: |-
    "click_input" is to click the control item with mouse.
  class_name: |-
    ClickInputCommand
  usage: |-
    [1] API call: click_input(button=, double)
    [2] Args:
      - button: 'The mouse button to click. One of ''left'', ''right'', ''middle'' or ''x'' (Default: ''left'')'
      - double: 'Whether to perform a double click or not (Default: False)'
    [3] Example: click_input(button="left", double=False)
    [4] Available control item: All control items.
    [5] Return: None


set_edit_text:
  summary: |-
    "set_edit_text" is to input text to the control item.
  class_name: |-
    SetEditTextCommand
  usage: |-
    [1] API call: set_edit_text(text="")
    [2] Args:
      - text: The text input to the Edit control item. It will change the content of current text in the edit block. Set text ='' if you want to clear current text in the block. You must also use Double Backslash escape character to escape the single quote in the string argument.
    [3] Example: set_edit_text(text="Hello World. \\n I enjoy the reading of the book 'The Lord of the Rings'. It's a great book.")
    [4] Available control item: [Edit]
    [5] Return: None


summary:
  summary: |-
    "summary" is to summarize your throughts of the current application window base on the control item list. This usually happens when the you need to complete the user request by summarizing or describing the information on the current application window. You must use the 'text' argument to input the text to be summarized.
  class_name: |-
    SummaryCommand
  usage: |-
    [1] API call: summary(text="")
    [2] Args: None
    [3] Example: summary(text="The image shows a workflow of a AI agent framework. \\n The framework has three components: the 'data collection', the 'data processing' and the 'data analysis'.")
    [4] Available control item: All control items.
    [5] Return: the summary of the image.

texts:
  summary: |-
    "texts" is to get the text of the control item. It typical apply to Edit and Document control item when user request is to get the text of the control item.
  class_name: |-
    GetTextsCommand
  usage: |-
    [1] API call: texts()
    [2] Args: None
    [3] Example: texts()
    [4] All control items.
    [5] Return: the text content of the control item.

wheel_mouse_input:
  summary: |-
    "wheel_mouse_input" is to scroll the control item. It typical apply to a ScrollBar type of control item when user request is to scroll the control item, or the targeted control item is not visible nor available in the control item list, but you know the control item is in the application window and you need to scroll to find it.
  class_name: |-
    WheelMouseInputCommand
  usage: |-
    [1] API call: wheel_mouse_input()
    [2] Args: 
        - wheel_dist: The distance to scroll. Positive values indicate upward scrolling, negative values indicate downward scrolling.
    [3] Example: wheel_mouse_input(wheel_dist=-20)
    [4] All control items.
    [5] Return: None
  